# Generated by Django 4.2.7 on 2025-08-04 13:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='JobCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Job Categories',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=200)),
                ('address', models.TextField(blank=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('event_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_hours', models.PositiveIntegerField(help_text='Expected duration in hours')),
                ('required_workers', models.PositiveIntegerField(default=1)),
                ('experience_level', models.CharField(choices=[('entry', 'Entry Level'), ('intermediate', 'Intermediate'), ('experienced', 'Experienced'), ('expert', 'Expert')], default='entry', max_length=20)),
                ('min_age', models.PositiveIntegerField(default=18, validators=[django.core.validators.MinValueValidator(16), django.core.validators.MaxValueValidator(65)])),
                ('pay_rate', models.DecimalField(decimal_places=2, max_digits=8)),
                ('pay_type', models.CharField(choices=[('hourly', 'Per Hour'), ('fixed', 'Fixed Amount'), ('daily', 'Per Day')], default='hourly', max_length=20)),
                ('total_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('requirements', models.TextField(blank=True, help_text='Additional requirements or instructions')),
                ('benefits', models.TextField(blank=True, help_text='Benefits or perks offered')),
                ('dress_code', models.CharField(blank=True, max_length=200)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('contact_phone', models.CharField(blank=True, max_length=17)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('is_urgent', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('application_deadline', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='jobs.jobcategory')),
                ('poster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posted_jobs', to=settings.AUTH_USER_MODEL)),
                ('required_skills', models.ManyToManyField(blank=True, to='accounts.skill')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SavedJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='jobs.job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'job')},
            },
        ),
        migrations.CreateModel(
            name='JobReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True)),
                ('punctuality', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('quality', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('communication', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('professionalism', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('would_recommend', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='jobs.job')),
                ('reviewee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_reviews', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('job', 'reviewer', 'reviewee')},
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20)),
                ('cover_letter', models.TextField(blank=True, help_text='Why are you interested in this job?')),
                ('availability_confirmed', models.BooleanField(default=True)),
                ('expected_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('relevant_experience', models.TextField(blank=True)),
                ('additional_skills', models.TextField(blank=True)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='jobs.job')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-applied_at'],
                'unique_together': {('job', 'worker')},
            },
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['status', 'event_date'], name='jobs_job_status_02a7ea_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['location', 'event_date'], name='jobs_job_locatio_27093a_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['category', 'status'], name='jobs_job_categor_2e2729_idx'),
        ),
    ]
