# Generated by Django 4.2.7 on 2025-08-05 06:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('jobs', '0003_job_call_clicks_job_enable_call_job_enable_whatsapp_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReviewHelpful',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('inappropriate', 'Inappropriate Content'), ('fake', 'Fake Review'), ('spam', 'Spam'), ('harassment', 'Harassment'), ('irrelevant', 'Irrelevant Content'), ('personal_info', 'Contains Personal Information'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True, help_text='Additional details about the report')),
                ('is_resolved', models.BooleanField(default=False)),
                ('admin_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='jobreview',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='jobreview',
            name='helpful_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of users who found this helpful'),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='is_featured',
            field=models.BooleanField(default=False, help_text='Featured review'),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='is_verified',
            field=models.BooleanField(default=False, help_text='Verified by admin as legitimate'),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='job_accuracy',
            field=models.PositiveIntegerField(blank=True, help_text='Accuracy of job description (for poster reviews)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='payment_timeliness',
            field=models.PositiveIntegerField(blank=True, help_text='Timeliness of payment (for poster reviews)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='reliability',
            field=models.PositiveIntegerField(blank=True, help_text='Reliability and dependability (for volunteer reviews)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='response_comment',
            field=models.TextField(blank=True, help_text='Response from the reviewed person'),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='response_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='review_type',
            field=models.CharField(choices=[('volunteer_review', 'Review of Volunteer'), ('poster_review', 'Review of Job Poster')], default='volunteer_review', max_length=20),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='skill_level',
            field=models.PositiveIntegerField(blank=True, help_text='Skill level and competence (for volunteer reviews)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='title',
            field=models.CharField(blank=True, help_text='Brief review title', max_length=200),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='work_environment',
            field=models.PositiveIntegerField(blank=True, help_text='Quality of work environment (for poster reviews)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='jobreview',
            name='would_work_again',
            field=models.BooleanField(default=True, help_text='Would you work with them again?'),
        ),
        migrations.AlterField(
            model_name='jobreview',
            name='comment',
            field=models.TextField(help_text='Detailed review comment'),
        ),
        migrations.AlterField(
            model_name='jobreview',
            name='communication',
            field=models.PositiveIntegerField(blank=True, help_text='Communication skills and responsiveness', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AlterField(
            model_name='jobreview',
            name='professionalism',
            field=models.PositiveIntegerField(blank=True, help_text='Professional behavior and attitude', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AlterField(
            model_name='jobreview',
            name='punctuality',
            field=models.PositiveIntegerField(blank=True, help_text='Timeliness and reliability', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AlterField(
            model_name='jobreview',
            name='quality',
            field=models.PositiveIntegerField(blank=True, help_text='Quality of work or job posting', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AlterField(
            model_name='jobreview',
            name='rating',
            field=models.PositiveIntegerField(help_text='Overall rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AlterField(
            model_name='jobreview',
            name='would_recommend',
            field=models.BooleanField(default=True, help_text='Would you recommend this person?'),
        ),
        migrations.AddIndex(
            model_name='jobreview',
            index=models.Index(fields=['reviewee', 'rating'], name='jobs_jobrev_reviewe_f7d435_idx'),
        ),
        migrations.AddIndex(
            model_name='jobreview',
            index=models.Index(fields=['reviewer', 'created_at'], name='jobs_jobrev_reviewe_512f18_idx'),
        ),
        migrations.AddIndex(
            model_name='jobreview',
            index=models.Index(fields=['job', 'review_type'], name='jobs_jobrev_job_id_e76668_idx'),
        ),
        migrations.AddField(
            model_name='reviewreport',
            name='reporter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reviewreport',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reviewreport',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='jobs.jobreview'),
        ),
        migrations.AddField(
            model_name='reviewhelpful',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes', to='jobs.jobreview'),
        ),
        migrations.AddField(
            model_name='reviewhelpful',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='reviewreport',
            unique_together={('review', 'reporter')},
        ),
        migrations.AlterUniqueTogether(
            name='reviewhelpful',
            unique_together={('review', 'user')},
        ),
    ]
